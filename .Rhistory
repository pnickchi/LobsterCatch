p$qmin = 0 # set to 0 for initial param and to 0.5 when no there is no trap saturation (local depletion)
p$Trap = data.frame( x = c(100), y = c(100) ) # A single trap in the middle of arena
p$ntraps = nrow(p$Trap)
p$saturationThreshold = 5
p$lengthBased = TRUE
p$lobsterSizeFile <- 'https://raw.githubusercontent.com/vpourfaraj/lobsterCatch/main/inst/extdata/LobsterSizeFreqs.csv'
p$lobLengthThreshold = 115
p$trapSaturation = TRUE
p$sexBased <- TRUE
# The following lines creates a sex distribution
p$lobsterSexDist <- list(labels = c('M','F','MM','BF'), #male, female, mature male, berried female
prob1 = c(0.55,0.35,0.05,0.05), #their prob in population
prob2 = c(0.5,0.50,0,0), # prob of small males and females that are under lobsterMatThreshold
lobsterMatThreshold = 100)  # The average size of mature lobsters
p$realizations = 3 #number of iterations/simulations
p$tSteps = 50       #timesteps per iteration (5 was used before Feb 8th, 2023)
# p$lobsterSexDist <- ''  # in case of p$sexBased = FALSE
Simrun <- SimulateLobsterMovement(p)
Results  <- GetSimOutput(Simrun)
#unlisting the result to add parameters columns
resultsdf<- data.frame(unlist(Results, FALSE, TRUE))
#Converting to long format ( wasn't able to use pivot_longer!)
timetomax <- c(resultsdf$TimeToMax.Trap1, resultsdf$TimeToMax.Trap2, resultsdf$TimeToMax.Trap3)
maxcatchno  <- c(resultsdf$MaxCatch.Trap1, resultsdf$MaxCatch.Trap2, resultsdf$MaxCatch.Trap3)
legalcatchwt  <- c(resultsdf$LegalCatchWt.Trap1, resultsdf$LegalCatchWt.Trap2, resultsdf$LegalCatchWt.Trap3)
totalcatchwt  <- c(resultsdf$TotalCatchWt.Trap1, resultsdf$TotalCatchWt.Trap2, resultsdf$TotalCatchWt.Trap3)
#taking the params used for naming purpose
densitylambda<- rep.int(p$initlambda, p$realizations)
dstepmov<- rep.int(p$dStep,p$realizations)
saturationThreshold<- rep.int(p$saturationThreshold, p$realizations)
baitShrinkage<- rep.int(p$shrinkage, p$realizations)
resultdfcomplete <- data.frame(timetomax = timetomax,
maxcatchno = maxcatchno,
legalcatchwt = legalcatchwt,
totalcatchwt = totalcatchwt,
densitylambda = densitylambda,
dstepmov= dstepmov,
saturationThreshold=saturationThreshold,
baitShrinkage= baitShrinkage)
mean(resultdfcomplete[,2])
#export the result as RDS
dstepvalue<- resultdfcomplete$dstepmov[2]
densityvalue<- resultdfcomplete$densitylambda[2]
Saturationvalue<- resultdfcomplete$saturationThreshold[2]
shrinkagefactor<- resultdfcomplete$baitShrinkage[2]
saveRDS(resultdfcomplete, sprintf('dstep%s_density%s_saturation%s_shrinkage%s.rds',dstepvalue, densityvalue, Saturationvalue, shrinkagefactor))
dstep1_density0.5_saturation5_shrinkage0.993 <- readRDS("C:/Users/pourfarajv/Desktop/Kumu_R_Visulization/AgentbasedModeling/lobsterCatchV2023/resultsVP/April13/dstep1_density0.5_saturation5_shrinkage0.993.rds")
View(dstep1_density0.5_saturation5_shrinkage0.993)
setwd("C:/Users/pourfarajv/Desktop/Kumu_R_Visulization/AgentbasedModeling/lobsterCatchV2023")
replicate(400, 1:10)
rep(0.1, 0.5, 1, 1.6)
rep(c(0.1, 0.5, 1, 1.6), 10)
1:10
initlambda          <- rep(c(0.1, 0.5, 1, 1.6), 4)
initlambda
initlambda          <- c(0.1, 0.5, 1, 1.6)
#dStep               <- 1:10
dstep   <- 5
saturationThreshold <- C(1,3,5,10)
saturationThreshold <- c(1,3,5,10)
length(initlambda)
# Define function
GetdfComplete = function(x, extp){
temp           <- bind_cols(x)
density             <- rep.int(p$initlambda,          p$realizations)
dstepmov            <- rep.int(p$dStep,               p$realizations)
saturationThreshold <- rep.int(p$saturationThreshold, p$realizations)
baitShrinkage       <- rep.int(p$shrinkage,           p$realizations)
howClose            <- rep.int(p$howClose,            p$realizations)
trapSaturation      <- rep.int(p$trapSaturation,      p$realizations)
res <- bind_cols(temp, density, dstepmov, saturationThreshold, baitShrinkage, howClose, trapSaturation)
clNames <- c(
paste0('TimeToMax_Trap',    1:ncol(x$TimeToMax)),
paste0('MaxCatch_Trap',     1:ncol(x$MaxCatch)),
paste0('LegalCatchWt_Trap', 1:ncol(x$LegalCatchWt)),
paste0('TotalCatchWt_Trap', 1:ncol(x$TotalCatchWt))
)
colnames(res) <- c(clNames,'densitylambda','dstepmov','saturationThreshold','baitShrinkage', 'howClose', 'trapSaturation')
return(res)
}
initlambda          <- c(0.1, 0.5, 1, 1.6)
#dStep               <- 1:10
dstep   <- 5
saturationThreshold <- c(1,3,5,10)
nrowgrids           <- rep(200, length(initlambda) * length(saturationThreshold)) #dimesntions of arena
ncolgrids           <- rep(200, length(initlambda) * length(saturationThreshold))
unitarea            <- rep(100, length(initlambda) * length(saturationThreshold))
initD               <- rep(3, length(initlambda) * length(saturationThreshold))  #inial dispersion index of lobsters in the arena
shrinkage           <- rep(0.993, length(initlambda) * length(saturationThreshold))
currentZoI          <- rep(15, length(initlambda) * length(saturationThreshold)) # The Zone of influence that gets updated in each timestep
radiusOfInfluence   <- rep(15, length(initlambda) * length(saturationThreshold)) # the radious of bait influence
saturationThreshold <- rep(3, length(initlambda) * length(saturationThreshold))
howClose            <- rep(0.5, length(initlambda) * length(saturationThreshold)) #determines at what distance a lobster considered trapped
Trap                <- rep(list(data.frame( x = c(100), y = c(100))),  length(initlambda) * length(saturationThreshold))
ntraps              <- unlist( lapply(X = Trap, nrow) )
lobLengthThreshold  <- rep(115, length(initlambda) * length(saturationThreshold))
q0                  <- rep(0.5, length(initlambda) * length(saturationThreshold))
realizations        <- rep(50, length(initlambda) * length(saturationThreshold)) # Number of simulation
tSteps              <- rep(50, length(initlambda) * length(saturationThreshold)) #Soak time
sexBased            <- rep(TRUE, length(initlambda) * length(saturationThreshold))
lengthBased         <- rep(TRUE, length(initlambda) * length(saturationThreshold))
trapSaturation      <- rep(TRUE, length(initlambda) * length(saturationThreshold))
qmin                <- rep(0, length(initlambda) * length(saturationThreshold)) #this has to be set to 0 when trap saturation is TRUE
lobsterSizeFile     <- 'https://raw.githubusercontent.com/vpourfaraj/lobsterCatch/main/inst/extdata/LobsterSizeFreqs.csv'
lobsterSexDist      <- list(labels = c('M','F','MM','BF'),
prob1 = c(0.55,0.35,0.05,0.05),
prob2 = c(0.5,0.50,0,0),
lobsterMatThreshold = 100)
initlambda          <- rep(c(0.1, 0.5, 1, 1.6), 4)
#dStep               <- C(1,1,1,1,2,2,2,2,5,5,5,5,10,10,10,10)
saturationThreshold <- C(1,1,1,1,3,3,3,3,5,5,5,5,10,10,10,10)
nsettings <- length(param$nrowgrids)
Simrun  <- list()
Results <- list()
resultdfcomplete <- list()
for(i in 1:nsettings){
p <- list()
p$nrowgrids            <- param$nrowgrids[i]
p$ncolgrids            <- param$ncolgrids[i]
p$ngrids               <- p$nrowgrids[i] * p$ncolgrids[i]
p$unitarea             <- param$unitarea[i]
p$initlambda           <- param$initlambda[i]
p$initD                <- param$initD[i]
p$shrinkage            <- param$shrinkage[i]
p$currentZoI           <- param$currentZoI[i]
p$radiusOfInfluence    <- param$radiusOfInfluence[i]
p$Trap                 <- as.data.frame(param$Trap[i])
p$ntraps               <- param$ntraps[i]
p$saturationThreshold  <- param$saturationThreshold[i]
p$howClose             <- param$howClose[i]
p$dStep                <- param$dStep[i]
p$lengthBased          <- param$lengthBased[i]
p$lobsterSizeFile      <- param$lobsterSizeFile
p$lobLengthThreshold   <- param$lobLengthThreshold[i]
p$trapSaturation       <- param$trapSaturation[i]
p$q0                   <- param$q0[i]
p$qmin                 <- param$qmin[i]
p$realizations         <- param$realizations[i]
p$tSteps               <- param$tSteps[i]
p$sexBased             <- param$sexBased[i]
p$lobsterSexDist       <- param$lobsterSexDist
print( paste0('Running simulation for parameter setting = ', i) )
Simrun[[i]]            <- SimulateLobsterMovement(p)
Results[[i]]           <- GetSimOutput(Simrun[[i]])
resultdfcomplete[[i]]  <- GetdfComplete(x = Results[[i]], extp = p)
saveRDS(object = resultdfcomplete[[i]], file = paste0('saturationTresholdimpact/Set_', i, '_resultdfcomplete', '.rds'))
}
param$nrowgrids
param <- list( nrowgrids=nrowgrids,
ncolgrids=ncolgrids,
unitarea=unitarea,
initlambda=initlambda,
initD=initD,
shrinkage=shrinkage,
currentZoI=currentZoI,
radiusOfInfluence=radiusOfInfluence,
Trap=Trap,
ntraps=ntraps,
saturationThreshold=saturationThreshold,
howClose=howClose,
dStep=dStep,
lengthBased=lengthBased,
lobsterSizeFile=lobsterSizeFile,
lobLengthThreshold=lobLengthThreshold,
trapSaturation=trapSaturation,
q0=q0,
qmin=qmin,
realizations=realizations,
tSteps=tSteps,
sexBased=sexBased,
lobsterSexDist=lobsterSexDist)
load_all()
document()
library(tidyverse)
library(ggplot2)
library(dplyr)
library(usethis)
library(devtools)
load_all()
document()
# Define function
GetdfComplete = function(x, extp){
temp           <- bind_cols(x)
density             <- rep.int(p$initlambda,          p$realizations)
dstepmov            <- rep.int(p$dStep,               p$realizations)
saturationThreshold <- rep.int(p$saturationThreshold, p$realizations)
baitShrinkage       <- rep.int(p$shrinkage,           p$realizations)
howClose            <- rep.int(p$howClose,            p$realizations)
trapSaturation      <- rep.int(p$trapSaturation,      p$realizations)
res <- bind_cols(temp, density, dstepmov, saturationThreshold, baitShrinkage, howClose, trapSaturation)
clNames <- c(
paste0('TimeToMax_Trap',    1:ncol(x$TimeToMax)),
paste0('MaxCatch_Trap',     1:ncol(x$MaxCatch)),
paste0('LegalCatchWt_Trap', 1:ncol(x$LegalCatchWt)),
paste0('TotalCatchWt_Trap', 1:ncol(x$TotalCatchWt))
)
colnames(res) <- c(clNames,'densitylambda','dstepmov','saturationThreshold','baitShrinkage', 'howClose', 'trapSaturation')
return(res)
}
initlambda          <- c(0.1, 0.5, 1, 1.6)
#dStep               <- 1:10
dstep   <- 5
saturationThreshold <- c(1,3,5,10)
nrowgrids           <- rep(200, length(initlambda) * length(saturationThreshold)) #dimesntions of arena
ncolgrids           <- rep(200, length(initlambda) * length(saturationThreshold))
unitarea            <- rep(100, length(initlambda) * length(saturationThreshold))
initD               <- rep(3, length(initlambda) * length(saturationThreshold))  #inial dispersion index of lobsters in the arena
shrinkage           <- rep(0.993, length(initlambda) * length(saturationThreshold))
currentZoI          <- rep(15, length(initlambda) * length(saturationThreshold)) # The Zone of influence that gets updated in each timestep
radiusOfInfluence   <- rep(15, length(initlambda) * length(saturationThreshold)) # the radious of bait influence
saturationThreshold <- rep(3, length(initlambda) * length(saturationThreshold))
howClose            <- rep(0.5, length(initlambda) * length(saturationThreshold)) #determines at what distance a lobster considered trapped
Trap                <- rep(list(data.frame( x = c(100), y = c(100))),  length(initlambda) * length(saturationThreshold))
ntraps              <- unlist( lapply(X = Trap, nrow) )
lobLengthThreshold  <- rep(115, length(initlambda) * length(saturationThreshold))
q0                  <- rep(0.5, length(initlambda) * length(saturationThreshold))
realizations        <- rep(50, length(initlambda) * length(saturationThreshold)) # Number of simulation
tSteps              <- rep(50, length(initlambda) * length(saturationThreshold)) #Soak time
sexBased            <- rep(TRUE, length(initlambda) * length(saturationThreshold))
lengthBased         <- rep(TRUE, length(initlambda) * length(saturationThreshold))
trapSaturation      <- rep(TRUE, length(initlambda) * length(saturationThreshold))
qmin                <- rep(0, length(initlambda) * length(saturationThreshold)) #this has to be set to 0 when trap saturation is TRUE
lobsterSizeFile     <- 'https://raw.githubusercontent.com/vpourfaraj/lobsterCatch/main/inst/extdata/LobsterSizeFreqs.csv'
lobsterSexDist      <- list(labels = c('M','F','MM','BF'),
prob1 = c(0.55,0.35,0.05,0.05),
prob2 = c(0.5,0.50,0,0),
lobsterMatThreshold = 100)
initlambda          <- rep(c(0.1, 0.5, 1, 1.6), 4)
#dStep               <- C(1,1,1,1,2,2,2,2,5,5,5,5,10,10,10,10)
saturationThreshold <- C(1,1,1,1,3,3,3,3,5,5,5,5,10,10,10,10)
param <- list( nrowgrids=nrowgrids,
ncolgrids=ncolgrids,
unitarea=unitarea,
initlambda=initlambda,
initD=initD,
shrinkage=shrinkage,
currentZoI=currentZoI,
radiusOfInfluence=radiusOfInfluence,
Trap=Trap,
ntraps=ntraps,
saturationThreshold=saturationThreshold,
howClose=howClose,
dStep=dStep,
lengthBased=lengthBased,
lobsterSizeFile=lobsterSizeFile,
lobLengthThreshold=lobLengthThreshold,
trapSaturation=trapSaturation,
q0=q0,
qmin=qmin,
realizations=realizations,
tSteps=tSteps,
sexBased=sexBased,
lobsterSexDist=lobsterSexDist)
dstep   <- 5
param <- list( nrowgrids=nrowgrids,
ncolgrids=ncolgrids,
unitarea=unitarea,
initlambda=initlambda,
initD=initD,
shrinkage=shrinkage,
currentZoI=currentZoI,
radiusOfInfluence=radiusOfInfluence,
Trap=Trap,
ntraps=ntraps,
saturationThreshold=saturationThreshold,
howClose=howClose,
dStep=dStep,
lengthBased=lengthBased,
lobsterSizeFile=lobsterSizeFile,
lobLengthThreshold=lobLengthThreshold,
trapSaturation=trapSaturation,
q0=q0,
qmin=qmin,
realizations=realizations,
tSteps=tSteps,
sexBased=sexBased,
lobsterSexDist=lobsterSexDist)
dStep
#dStep               <- 1:10
dstep   <- c(5)
param <- list( nrowgrids=nrowgrids,
ncolgrids=ncolgrids,
unitarea=unitarea,
initlambda=initlambda,
initD=initD,
shrinkage=shrinkage,
currentZoI=currentZoI,
radiusOfInfluence=radiusOfInfluence,
Trap=Trap,
ntraps=ntraps,
saturationThreshold=saturationThreshold,
howClose=howClose,
dStep=dStep,
lengthBased=lengthBased,
lobsterSizeFile=lobsterSizeFile,
lobLengthThreshold=lobLengthThreshold,
trapSaturation=trapSaturation,
q0=q0,
qmin=qmin,
realizations=realizations,
tSteps=tSteps,
sexBased=sexBased,
lobsterSexDist=lobsterSexDist)
#dStep               <- 1:10
dStep   <- 5
param <- list( nrowgrids=nrowgrids,
ncolgrids=ncolgrids,
unitarea=unitarea,
initlambda=initlambda,
initD=initD,
shrinkage=shrinkage,
currentZoI=currentZoI,
radiusOfInfluence=radiusOfInfluence,
Trap=Trap,
ntraps=ntraps,
saturationThreshold=saturationThreshold,
howClose=howClose,
dStep=dStep,
lengthBased=lengthBased,
lobsterSizeFile=lobsterSizeFile,
lobLengthThreshold=lobLengthThreshold,
trapSaturation=trapSaturation,
q0=q0,
qmin=qmin,
realizations=realizations,
tSteps=tSteps,
sexBased=sexBased,
lobsterSexDist=lobsterSexDist)
nsettings <- length(param$nrowgrids)
Simrun  <- list()
Results <- list()
resultdfcomplete <- list()
for(i in 1:nsettings){
p <- list()
p$nrowgrids            <- param$nrowgrids[i]
p$ncolgrids            <- param$ncolgrids[i]
p$ngrids               <- p$nrowgrids[i] * p$ncolgrids[i]
p$unitarea             <- param$unitarea[i]
p$initlambda           <- param$initlambda[i]
p$initD                <- param$initD[i]
p$shrinkage            <- param$shrinkage[i]
p$currentZoI           <- param$currentZoI[i]
p$radiusOfInfluence    <- param$radiusOfInfluence[i]
p$Trap                 <- as.data.frame(param$Trap[i])
p$ntraps               <- param$ntraps[i]
p$saturationThreshold  <- param$saturationThreshold[i]
p$howClose             <- param$howClose[i]
p$dStep                <- param$dStep[i]
p$lengthBased          <- param$lengthBased[i]
p$lobsterSizeFile      <- param$lobsterSizeFile
p$lobLengthThreshold   <- param$lobLengthThreshold[i]
p$trapSaturation       <- param$trapSaturation[i]
p$q0                   <- param$q0[i]
p$qmin                 <- param$qmin[i]
p$realizations         <- param$realizations[i]
p$tSteps               <- param$tSteps[i]
p$sexBased             <- param$sexBased[i]
p$lobsterSexDist       <- param$lobsterSexDist
print( paste0('Running simulation for parameter setting = ', i) )
Simrun[[i]]            <- SimulateLobsterMovement(p)
Results[[i]]           <- GetSimOutput(Simrun[[i]])
resultdfcomplete[[i]]  <- GetdfComplete(x = Results[[i]], extp = p)
saveRDS(object = resultdfcomplete[[i]], file = paste0('saturationTresholdimpact/Set_', i, '_resultdfcomplete', '.rds'))
}
warnings()
Simrun  <- list()
Results <- list()
resultdfcomplete <- list()
for(i in 1:nsettings){
p <- list()
p$nrowgrids            <- param$nrowgrids[i]
p$ncolgrids            <- param$ncolgrids[i]
p$ngrids               <- p$nrowgrids[i] * p$ncolgrids[i]
p$unitarea             <- param$unitarea[i]
p$initlambda           <- param$initlambda[i]
p$initD                <- param$initD[i]
p$shrinkage            <- param$shrinkage[i]
p$currentZoI           <- param$currentZoI[i]
p$radiusOfInfluence    <- param$radiusOfInfluence[i]
p$Trap                 <- as.data.frame(param$Trap[i])
p$ntraps               <- param$ntraps[i]
p$saturationThreshold  <- param$saturationThreshold[i]
p$howClose             <- param$howClose[i]
p$dStep                <- param$dStep[i]
p$lengthBased          <- param$lengthBased[i]
p$lobsterSizeFile      <- param$lobsterSizeFile
p$lobLengthThreshold   <- param$lobLengthThreshold[i]
p$trapSaturation       <- param$trapSaturation[i]
p$q0                   <- param$q0[i]
p$qmin                 <- param$qmin[i]
p$realizations         <- param$realizations[i]
p$tSteps               <- param$tSteps[i]
p$sexBased             <- param$sexBased[i]
p$lobsterSexDist       <- param$lobsterSexDist
print( paste0('Running simulation for parameter setting = ', i) )
Simrun[[i]]            <- SimulateLobsterMovement(p)
Results[[i]]           <- GetSimOutput(Simrun[[i]])
resultdfcomplete[[i]]  <- GetdfComplete(x = Results[[i]], extp = p)
saveRDS(object = resultdfcomplete[[i]], file = paste0('variedSaturation/Set_', i, '_resultdfcomplete', '.rds'))
}
setwd("C:/Users/pourfarajv/Desktop/Kumu_R_Visulization/AgentbasedModeling/lobsterCatchV2023/resultsVP/variedSaturation")
Simrun  <- list()
Results <- list()
resultdfcomplete <- list()
for(i in 1:nsettings){
p <- list()
p$nrowgrids            <- param$nrowgrids[i]
p$ncolgrids            <- param$ncolgrids[i]
p$ngrids               <- p$nrowgrids[i] * p$ncolgrids[i]
p$unitarea             <- param$unitarea[i]
p$initlambda           <- param$initlambda[i]
p$initD                <- param$initD[i]
p$shrinkage            <- param$shrinkage[i]
p$currentZoI           <- param$currentZoI[i]
p$radiusOfInfluence    <- param$radiusOfInfluence[i]
p$Trap                 <- as.data.frame(param$Trap[i])
p$ntraps               <- param$ntraps[i]
p$saturationThreshold  <- param$saturationThreshold[i]
p$howClose             <- param$howClose[i]
p$dStep                <- param$dStep[i]
p$lengthBased          <- param$lengthBased[i]
p$lobsterSizeFile      <- param$lobsterSizeFile
p$lobLengthThreshold   <- param$lobLengthThreshold[i]
p$trapSaturation       <- param$trapSaturation[i]
p$q0                   <- param$q0[i]
p$qmin                 <- param$qmin[i]
p$realizations         <- param$realizations[i]
p$tSteps               <- param$tSteps[i]
p$sexBased             <- param$sexBased[i]
p$lobsterSexDist       <- param$lobsterSexDist
print( paste0('Running simulation for parameter setting = ', i) )
Simrun[[i]]            <- SimulateLobsterMovement(p)
Results[[i]]           <- GetSimOutput(Simrun[[i]])
resultdfcomplete[[i]]  <- GetdfComplete(x = Results[[i]], extp = p)
saveRDS(object = resultdfcomplete[[i]], file = paste0('variedSaturation/Set_', i, '_resultdfcomplete', '.rds'))
}
Simrun  <- list()
Results <- list()
resultdfcomplete <- list()
for(i in 1:nsettings){
p <- list()
p$nrowgrids            <- param$nrowgrids[i]
p$ncolgrids            <- param$ncolgrids[i]
p$ngrids               <- p$nrowgrids[i] * p$ncolgrids[i]
p$unitarea             <- param$unitarea[i]
p$initlambda           <- param$initlambda[i]
p$initD                <- param$initD[i]
p$shrinkage            <- param$shrinkage[i]
p$currentZoI           <- param$currentZoI[i]
p$radiusOfInfluence    <- param$radiusOfInfluence[i]
p$Trap                 <- as.data.frame(param$Trap[i])
p$ntraps               <- param$ntraps[i]
p$saturationThreshold  <- param$saturationThreshold[i]
p$howClose             <- param$howClose[i]
p$dStep                <- param$dStep[i]
p$lengthBased          <- param$lengthBased[i]
p$lobsterSizeFile      <- param$lobsterSizeFile
p$lobLengthThreshold   <- param$lobLengthThreshold[i]
p$trapSaturation       <- param$trapSaturation[i]
p$q0                   <- param$q0[i]
p$qmin                 <- param$qmin[i]
p$realizations         <- param$realizations[i]
p$tSteps               <- param$tSteps[i]
p$sexBased             <- param$sexBased[i]
p$lobsterSexDist       <- param$lobsterSexDist
print( paste0('Running simulation for parameter setting = ', i) )
Simrun[[i]]            <- SimulateLobsterMovement(p)
Results[[i]]           <- GetSimOutput(Simrun[[i]])
resultdfcomplete[[i]]  <- GetdfComplete(x = Results[[i]], extp = p)
saveRDS(object = resultdfcomplete[[i]], file = paste0('variedSaturation/Set_', i, '_resultdfcomplete', '.rds'))
}
?paste0()
setwd("C:/Users/pourfarajv/Desktop/Kumu_R_Visulization/AgentbasedModeling/lobsterCatchV2023/resultsVP/variedSaturation")
Simrun  <- list()
Results <- list()
resultdfcomplete <- list()
for(i in 1:nsettings){
p <- list()
p$nrowgrids            <- param$nrowgrids[i]
p$ncolgrids            <- param$ncolgrids[i]
p$ngrids               <- p$nrowgrids[i] * p$ncolgrids[i]
p$unitarea             <- param$unitarea[i]
p$initlambda           <- param$initlambda[i]
p$initD                <- param$initD[i]
p$shrinkage            <- param$shrinkage[i]
p$currentZoI           <- param$currentZoI[i]
p$radiusOfInfluence    <- param$radiusOfInfluence[i]
p$Trap                 <- as.data.frame(param$Trap[i])
p$ntraps               <- param$ntraps[i]
p$saturationThreshold  <- param$saturationThreshold[i]
p$howClose             <- param$howClose[i]
p$dStep                <- param$dStep[i]
p$lengthBased          <- param$lengthBased[i]
p$lobsterSizeFile      <- param$lobsterSizeFile
p$lobLengthThreshold   <- param$lobLengthThreshold[i]
p$trapSaturation       <- param$trapSaturation[i]
p$q0                   <- param$q0[i]
p$qmin                 <- param$qmin[i]
p$realizations         <- param$realizations[i]
p$tSteps               <- param$tSteps[i]
p$sexBased             <- param$sexBased[i]
p$lobsterSexDist       <- param$lobsterSexDist
print( paste0('Running simulation for parameter setting = ', i) )
Simrun[[i]]            <- SimulateLobsterMovement(p)
Results[[i]]           <- GetSimOutput(Simrun[[i]])
resultdfcomplete[[i]]  <- GetdfComplete(x = Results[[i]], extp = p)
saveRDS(object = resultdfcomplete[[i]], file = paste0('Set_', i, '_resultdfcomplete', '.rds'))
}
Set_1_resultdfcomplete <- readRDS("C:/Users/pourfarajv/Desktop/Kumu_R_Visulization/AgentbasedModeling/lobsterCatchV2023/resultsVP/variedSaturation/Set_1_resultdfcomplete.rds")
View(Set_1_resultdfcomplete)
dStep
saturationThreshold
